#!/usr/bin/env bash
# Script to run tests using Docker Compose

set -e

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Prints colored output
print_status() {
    echo -e "${GREEN}[TEST]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

if [ ! -f "docker-compose.test.yml" ]; then
    print_error "docker compose.test.yml not found!"
    exit 1
fi

print_status "Starting test environment..."

# Build the test image if needed
print_status "Building test image..."
docker compose -f docker-compose.test.yml build test

# Run database setup for tests
print_status "Setting up test database..."
docker compose -f docker-compose.test.yml run --rm test bash -c "
    bundle exec rails db:create RAILS_ENV=test 2>/dev/null || true &&
    bundle exec rails db:migrate RAILS_ENV=test
"

# Run the tests with any passed arguments
print_status "Running tests..."
if [ $# -eq 0 ]; then
    # No arguments passed, run all tests
    docker compose -f docker-compose.test.yml run --rm test
else
    # Arguments passed, forward them to rspec
    docker compose -f docker-compose.test.yml run --rm test bundle exec rspec "$@"
fi

# Clean up
# print_status "Cleaning up test containers..."
# docker compose -f docker-compose.test.yml down -v

# print_status "Tests complete!"
